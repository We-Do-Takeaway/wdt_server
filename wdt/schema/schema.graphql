type Section {
  id: ID!
  description: String
  name: String!
  photo: String
  displayOrder: Int
  items: [SectionItem!]!
}

type SectionItem {
  id: ID!
  description: String
  name: String!
  photo: String
  displayOrder: Int
}

type Menu {
  id: ID!
  description: String
  name: String!
  photo: String
  sections: [Section]
}

type Item {
  id: ID!
  description: String
  name: String!
  photo: String
}

type Basket {
  id: ID!
  items: [BasketItem]
  ownerId: ID!
}

type BasketItem {
  id: ID!
  description: String
  name: String!
  photo: String
  quantity: Int!
}

type Query {
  basket(id: ID!): Basket
  item(id: ID!): Item
  items: [Item!]!
  menu(id: ID!): Menu
  menus: [Menu!]!
  section(id: ID!): Section
  sections: [Section!]!
}

input BasketItemInput {
  itemId: ID!
  quantity: Int!
}

type Mutation {
  addBasketItem(basketId: ID!, basketItem: BasketItemInput!): Basket!
  updateBasketItem(basketId: ID!, basketItem: BasketItemInput!): Basket!
  removeBasketItem(basketId: ID!, itemId: ID!): Basket!
  clearBasket(basketId: ID!): Basket!
}
